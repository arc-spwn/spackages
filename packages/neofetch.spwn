extract $

extract import "utils.spwn"

coolerarc_logo = "
                                        
                                        
                                        
                                        
                                        
    IUseArcB          twIU
  seArcBtwIUse        ArcB
 twIUseArcBtwIUs     eArcB
twIUs      eArcBtwIUseArcB
twIUs       eArcBtwIUseAr
 cBt           wIUseArc
                                        
                                        
                                        
                                        
                                        
                                     
"

arc_logo = "
                                        
                                        
                                        
                                        
                                        
             .'''..       ..            
           .;lc::lc,..   .:,.           
           ;o:.  .;cl:,',::.            
           .'.     .',,;,'.             
                                        
                                        
                                        
                                        
                                        
"
let curLogo = arc_logo;

neofetch = (context){
    extract context

    let logo_done = false
    let stats_done = false
	
	if(args.length > 0 && args[0] == "cool" ){
		curLogo = coolerarc_logo;
	}
	else{
		curLogo = arc_logo;
	}
    let logo = curLogo.split("\n")
    logo.shift() // remove first newline

    let stats = [
        "root@arc",
        "",
        // "OS: Arc {}",
        // "Kernel: {}",
        "Uptime: {} seconds".fmt($.time() - start_time),
        "Packages: {} ".fmt([commands.commands.values().length]),
		// "Shell: {}",
        "Shell: Ash ",
        // "Terminal: {}",
        // "CPU: {}",
        // "GPU: {}",
        // "Memory: {}",
    ]

    let i = 0;
	/*let chance = random(1, 20);
	
	if(chance >= 5){
		arc_logo = coolerarc_logo;
	}*/

    while !logo_done || !stats_done {
        let strip = ""
        if !logo_done { strip += logo[i] }
        while strip.length < 40 + 3 { strip += " " }
        if !stats_done {
            if stats[i].length == 0 && i > 0 {
                strip += stats[i-1].replace(r".","-")
            } else {
                strip += stats[i]
            }
        }
        print(strip)
        if i >= logo.length-1 {
            logo_done = true
        }
        if i >= stats.length-1 {
            stats_done = true
        }
        i++
    }
}

return @command::new(
	name = 'neofetch',
    description = 'Fetches the system informations.',
	call = neofetch,
)
